comments:
Since you know that ATTRIBUTES is json, you fillna the column with '{}' instead of '[]'
T_1['ATTRIBUTES'] = T_1['ATTRIBUTES'].fillna('{}')
You are in the right direction. make sure your expected_cols is not fixed.
Steps:
initialize expected_cols with keys of the first entry of ATTRIBUTES
Loop the Attributes data
Check for missing keys between current attribute data and expected_cols
Append the missing keys to expected_cols
Add new data to your newdict
9:28
Did they provide the expected columns in the problem statement?


Abhishek Kurup
  9:29 AM
No they did not provide that, I just looked at few rows


joseph
:house_with_garden:  9:29 AM
ok. you can follow the steps that I provided.


Abhishek Kurup
  9:31 AM
okay, I will try doing that. But what do I do with the extra columns that only few rows might have? Append to the end? :thinking_face:


joseph
:house_with_garden:  9:31 AM
newdict = {}
for nesteddict in T_1['ATTRIBUTES']:
    for key in expected_cols:
        if key not in nesteddict:
            #print(key, 'is unknown')
            newdict[T_1['ATTRIBUTES'].keys()[i]] = T_1['ATTRIBUTES'].values()[i]
        #else:
        #    value = nesteddict[key]
        #    print('{} = {}'.format(key, value))
9:32
this is almost correct. you miss to check the missing keys with expected_cols.
9:33
append the missing keys to expected_cols.
9:33
newdict = {}
for nesteddict in T_1['ATTRIBUTES']:
    # check missing columns between T_1['ATTRIBUTES'].keys()[i] and expected_cols
    # append missing columns to expected_cols
    for key in expected_cols:
        if key not in nesteddict:
            #print(key, 'is unknown')
            newdict[T_1['ATTRIBUTES'].keys()[i]] = T_1['ATTRIBUTES'].values()[i]
(edited)


Abhishek Kurup
  9:34 AM
Okay, I will do that. And I think you copied the same code :sweat_smile:
9:35
Thank you for the tips, I will work on it and see how much I can finish :grimacing:


joseph
:house_with_garden:  9:36 AM
small tip: use iterrows to iterate dataframe.
:gratitude-thank-you:
1

9:36
df = pd.read_csv("/Users/josephalquisola/Downloads/2019-02-15.tsv", sep="\t")

for index, row in df.iterrows():
    print(index, row["MD5(SESSION_ID)"])
